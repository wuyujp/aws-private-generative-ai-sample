
> private-generative-ai-sample@0.1.0 cdk
> cdk synth PrivateGenerativeAiSampleAppStack

Resources:
  BackEndApiPrivateGenerativeAISampleBackendApiB86C5562:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - PRIVATE
        VpcEndpointIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefprivateApiVpcEndpointA7E96476BAFB95BF
      Name: PrivateGenerativeAISampleBackendApi
      Policy:
        Statement:
          - Action: execute-api:Invoke
            Condition:
              StringNotEquals:
                aws:SourceVpce:
                  Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefprivateApiVpcEndpointA7E96476BAFB95BF
            Effect: Deny
            Principal:
              AWS: "*"
            Resource: execute-api:/*
          - Action: execute-api:Invoke
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: execute-api:/*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiDeploymentACA7A2CCe2cc9c2876cbd4e23366ec2775a4c4a4:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    DependsOn:
      - BackEndApiAuthApiAuthorizerE9192FC7
      - BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryOPTIONS2CC223DC
      - BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryPOST20110EE0
      - BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryE8BD55CC
      - BackEndApiPrivateGenerativeAISampleBackendApichatOPTIONS25640E8F
      - BackEndApiPrivateGenerativeAISampleBackendApichatPOST86FB48C2
      - BackEndApiPrivateGenerativeAISampleBackendApichat1761F1F4
      - BackEndApiPrivateGenerativeAISampleBackendApiloginOPTIONS97DC73DE
      - BackEndApiPrivateGenerativeAISampleBackendApiloginPOST2FFF69BD
      - BackEndApiPrivateGenerativeAISampleBackendApilogin90989C93
      - BackEndApiPrivateGenerativeAISampleBackendApiOPTIONSA963BAC6
      - BackEndApiPrivateGenerativeAISampleBackendApiragOPTIONS739A6BF1
      - BackEndApiPrivateGenerativeAISampleBackendApiragPOST7CFE3651
      - BackEndApiPrivateGenerativeAISampleBackendApiragAF5033DB
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Deployment/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentACA7A2CCe2cc9c2876cbd4e23366ec2775a4c4a4
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
      StageName: prod
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/DeploymentStage.prod/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiOPTIONSA963BAC6:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Fn::GetAtt:
          - BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - RootResourceId
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/OPTIONS/Resource
  BackEndApiPrivateGenerativeAISampleBackendApilogin90989C93:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - RootResourceId
      PathPart: login
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/login/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiloginOPTIONS97DC73DE:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApilogin90989C93
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/login/OPTIONS/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiloginPOSTApiPermissionPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTloginBED5C0B7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiAuthMyLambdaLoginC1012B4A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
            - /POST/login
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/login/POST/ApiPermission.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..login
  BackEndApiPrivateGenerativeAISampleBackendApiloginPOSTApiPermissionTestPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTloginD30F3378:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiAuthMyLambdaLoginC1012B4A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /test-invoke-stage/POST/login
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/login/POST/ApiPermission.Test.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..login
  BackEndApiPrivateGenerativeAISampleBackendApiloginPOST2FFF69BD:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BackEndApiAuthMyLambdaLoginC1012B4A
                  - Arn
              - /invocations
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApilogin90989C93
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/login/POST/Resource
  BackEndApiPrivateGenerativeAISampleBackendApichat1761F1F4:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - RootResourceId
      PathPart: chat
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/chat/Resource
  BackEndApiPrivateGenerativeAISampleBackendApichatOPTIONS25640E8F:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApichat1761F1F4
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/chat/OPTIONS/Resource
  BackEndApiPrivateGenerativeAISampleBackendApichatPOSTApiPermissionPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTchatDED620F5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiBedrockInvokeBedrockLambda11E10019
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
            - /POST/chat
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/chat/POST/ApiPermission.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..chat
  BackEndApiPrivateGenerativeAISampleBackendApichatPOSTApiPermissionTestPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTchat13AD1AE6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiBedrockInvokeBedrockLambda11E10019
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /test-invoke-stage/POST/chat
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/chat/POST/ApiPermission.Test.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..chat
  BackEndApiPrivateGenerativeAISampleBackendApichatPOST86FB48C2:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: BackEndApiAuthApiAuthorizerE9192FC7
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BackEndApiBedrockInvokeBedrockLambda11E10019
                  - Arn
              - /invocations
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApichat1761F1F4
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/chat/POST/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiragAF5033DB:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - RootResourceId
      PathPart: rag
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/rag/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiragOPTIONS739A6BF1:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiragAF5033DB
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/rag/OPTIONS/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiragPOSTApiPermissionPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTrag319F0345:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiBedrockInvokeBedrockKBLambda734B1074
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
            - /POST/rag
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/rag/POST/ApiPermission.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..rag
  BackEndApiPrivateGenerativeAISampleBackendApiragPOSTApiPermissionTestPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTragE8479FE7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiBedrockInvokeBedrockKBLambda734B1074
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /test-invoke-stage/POST/rag
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/rag/POST/ApiPermission.Test.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..rag
  BackEndApiPrivateGenerativeAISampleBackendApiragPOST7CFE3651:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: BackEndApiAuthApiAuthorizerE9192FC7
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BackEndApiBedrockInvokeBedrockKBLambda734B1074
                  - Arn
              - /invocations
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiragAF5033DB
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/rag/POST/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryE8BD55CC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - RootResourceId
      PathPart: addChatHistory
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/addChatHistory/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryOPTIONS2CC223DC:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryE8BD55CC
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/addChatHistory/OPTIONS/Resource
  BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryPOSTApiPermissionPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTaddChatHistory72AD5FAA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiChatHistoryMyLambdaAddChatHistory546FA09D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
            - /POST/addChatHistory
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/addChatHistory/POST/ApiPermission.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..addChatHistory
  BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryPOSTApiPermissionTestPrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543CPOSTaddChatHistory39EBAAF7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiChatHistoryMyLambdaAddChatHistory546FA09D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /test-invoke-stage/POST/addChatHistory
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/addChatHistory/POST/ApiPermission.Test.PrivateGenerativeAiSampleAppStackBackEndApiPrivateGenerativeAISampleBackendApiFEAB543C.POST..addChatHistory
  BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryPOST20110EE0:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: BackEndApiAuthApiAuthorizerE9192FC7
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BackEndApiChatHistoryMyLambdaAddChatHistory546FA09D
                  - Arn
              - /invocations
      ResourceId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiaddChatHistoryE8BD55CC
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/PrivateGenerativeAISampleBackendApi/Default/addChatHistory/POST/Resource
  BackEndApiAuthlambdaAuthRole385BA7D0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/lambdaAuthRole/Resource
  BackEndApiAuthlambdaAuthRoleDefaultPolicyF4C32A74:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BackEndApiAuthUserTableC1A829E0
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: BackEndApiAuthlambdaAuthRoleDefaultPolicyF4C32A74
      Roles:
        - Ref: BackEndApiAuthlambdaAuthRole385BA7D0
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/lambdaAuthRole/DefaultPolicy/Resource
  BackEndApiAuthMyLambdaAuthorizerF68798E9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 97b94c11a46983249486fd23296f73164f62fa1291ccec1cffc16832085cf8f9.zip
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
          - BackEndApiAuthlambdaAuthRole385BA7D0
          - Arn
      Runtime: python3.10
      Timeout: 300
    DependsOn:
      - BackEndApiAuthlambdaAuthRoleDefaultPolicyF4C32A74
      - BackEndApiAuthlambdaAuthRole385BA7D0
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/MyLambdaAuthorizer/Resource
      aws:asset:path: asset.97b94c11a46983249486fd23296f73164f62fa1291ccec1cffc16832085cf8f9
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BackEndApiAuthMyLambdaAuthorizerPrivateGenerativeAiSampleAppStackBackEndApiAuthApiAuthorizer57D10DFCPermissions45363687:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackEndApiAuthMyLambdaAuthorizerF68798E9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
            - /authorizers/
            - Ref: BackEndApiAuthApiAuthorizerE9192FC7
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/MyLambdaAuthorizer/PrivateGenerativeAiSampleAppStackBackEndApiAuthApiAuthorizer57D10DFC:Permissions
  BackEndApiAuthApiAuthorizerE9192FC7:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Fn::Select:
                - 1
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - BackEndApiAuthMyLambdaAuthorizerF68798E9
                        - Arn
            - ":apigateway:"
            - Fn::Select:
                - 3
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - BackEndApiAuthMyLambdaAuthorizerF68798E9
                        - Arn
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - BackEndApiAuthMyLambdaAuthorizerF68798E9
                - Arn
            - /invocations
      IdentitySource: method.request.header.Authorization
      Name: PrivateGenerativeAiSampleAppStackBackEndApiAuthApiAuthorizer57D10DFC
      RestApiId:
        Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
      Type: TOKEN
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/ApiAuthorizer/Resource
  BackEndApiAuthUserTableC1A829E0:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
      TableName: PrivateGenerativeAISampleUsers
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/UserTable/Resource
  BackEndApiAuthMyLambdaLoginC1012B4A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 9a8b08e62cb2aa0f57af92c6b28e29b8dc66cccd387023ef1f4667c076eed758.zip
      Environment:
        Variables:
          table_name:
            Ref: BackEndApiAuthUserTableC1A829E0
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
          - BackEndApiAuthlambdaAuthRole385BA7D0
          - Arn
      Runtime: python3.10
      Timeout: 300
    DependsOn:
      - BackEndApiAuthlambdaAuthRoleDefaultPolicyF4C32A74
      - BackEndApiAuthlambdaAuthRole385BA7D0
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Auth/MyLambdaLogin/Resource
      aws:asset:path: asset.9a8b08e62cb2aa0f57af92c6b28e29b8dc66cccd387023ef1f4667c076eed758
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BackEndApiBedrockLambdaInvokeBedrockRoleD5D73005:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonBedrockFullAccess
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Bedrock/LambdaInvokeBedrockRole/Resource
  BackEndApiBedrockInvokeBedrockLambda11E10019:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a8936bff66ed88226e04c5d53eb3cc0d7c33e0f9f389d6d6795741bc0de2e9cc.zip
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
          - BackEndApiBedrockLambdaInvokeBedrockRoleD5D73005
          - Arn
      Runtime: python3.10
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputFnGetAttsharedSecurityGroupB712E57BGroupId39546593
        SubnetIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3
    DependsOn:
      - BackEndApiBedrockLambdaInvokeBedrockRoleD5D73005
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Bedrock/InvokeBedrockLambda/Resource
      aws:asset:path: asset.a8936bff66ed88226e04c5d53eb3cc0d7c33e0f9f389d6d6795741bc0de2e9cc
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BackEndApiBedrockLambdaInvokeBedrockKBRole707C8264:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonBedrockFullAccess
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Bedrock/LambdaInvokeBedrockKBRole/Resource
  BackEndApiBedrockLambdaInvokeBedrockKBRoleDefaultPolicyD2F2AC8D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Fn::ImportValue: PrivateGenerativeAiSampleRagStack:ExportsOutputRefDataSourceBucket9FA93E04BB6984D1
                  - /*
        Version: "2012-10-17"
      PolicyName: BackEndApiBedrockLambdaInvokeBedrockKBRoleDefaultPolicyD2F2AC8D
      Roles:
        - Ref: BackEndApiBedrockLambdaInvokeBedrockKBRole707C8264
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Bedrock/LambdaInvokeBedrockKBRole/DefaultPolicy/Resource
  BackEndApiBedrockInvokeBedrockKBLambda734B1074:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8fa59d97bf4b636ab3994158d6e0c1631071d2a7641883e965622bb42815dd8b.zip
      Environment:
        Variables:
          knowledge_base_Id:
            Fn::ImportValue: PrivateGenerativeAiSampleRagStack:ExportsOutputRefKnowledgeBaseD054384B
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
          - BackEndApiBedrockLambdaInvokeBedrockKBRole707C8264
          - Arn
      Runtime: python3.10
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputFnGetAttsharedSecurityGroupB712E57BGroupId39546593
        SubnetIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3
    DependsOn:
      - BackEndApiBedrockLambdaInvokeBedrockKBRoleDefaultPolicyD2F2AC8D
      - BackEndApiBedrockLambdaInvokeBedrockKBRole707C8264
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/Bedrock/InvokeBedrockKBLambda/Resource
      aws:asset:path: asset.8fa59d97bf4b636ab3994158d6e0c1631071d2a7641883e965622bb42815dd8b
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BackEndApiChatHistoryAIChatHistoryTable4899EB1C:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: UserID
          AttributeType: S
        - AttributeName: ChatID
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: "N"
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: ChatID-Timestamp-Index
          KeySchema:
            - AttributeName: ChatID
              KeyType: HASH
            - AttributeName: Timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: UserID
          KeyType: HASH
        - AttributeName: ChatID
          KeyType: RANGE
      TableName: PrivateGenerativeAISampleChatHistory
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/ChatHistory/AIChatHistoryTable/Resource
  BackEndApiChatHistoryLambdaAddChatHistoryRole7C494A9D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/ChatHistory/LambdaAddChatHistoryRole/Resource
  BackEndApiChatHistoryLambdaAddChatHistoryRoleDefaultPolicyB3666EE2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BackEndApiChatHistoryAIChatHistoryTable4899EB1C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BackEndApiChatHistoryAIChatHistoryTable4899EB1C
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: BackEndApiChatHistoryLambdaAddChatHistoryRoleDefaultPolicyB3666EE2
      Roles:
        - Ref: BackEndApiChatHistoryLambdaAddChatHistoryRole7C494A9D
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/ChatHistory/LambdaAddChatHistoryRole/DefaultPolicy/Resource
  BackEndApiChatHistoryMyLambdaAddChatHistory546FA09D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: da347ec4c66397d462ce7c1df5e80ac41d0113153e5ffbc85f5280f08e89c6c9.zip
      Environment:
        Variables:
          table_name:
            Ref: BackEndApiChatHistoryAIChatHistoryTable4899EB1C
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
          - BackEndApiChatHistoryLambdaAddChatHistoryRole7C494A9D
          - Arn
      Runtime: python3.10
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputFnGetAttsharedSecurityGroupB712E57BGroupId39546593
        SubnetIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3
    DependsOn:
      - BackEndApiChatHistoryLambdaAddChatHistoryRoleDefaultPolicyB3666EE2
      - BackEndApiChatHistoryLambdaAddChatHistoryRole7C494A9D
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/BackEndApi/ChatHistory/MyLambdaAddChatHistory/Resource
      aws:asset:path: asset.da347ec4c66397d462ce7c1df5e80ac41d0113153e5ffbc85f5280f08e89c6c9
      aws:asset:is-bundled: false
      aws:asset:property: Code
  FrontendWebDescribeNetworkInterfaces0E22F40C:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"service":"EC2","action":"describeNetworkInterfaces","parameters":{"NetworkInterfaceIds":'
            - Fn::GetAtt:
                - CdkJsonStringify2
                - Value
            - '},"physicalResourceId":{"id":"1724594744252"}}'
      Update:
        Fn::Join:
          - ""
          - - '{"service":"EC2","action":"describeNetworkInterfaces","parameters":{"NetworkInterfaceIds":'
            - Fn::GetAtt:
                - CdkJsonStringify2
                - Value
            - '},"physicalResourceId":{"id":"1724594744252"}}'
      InstallLatestAwsSdk: false
    DependsOn:
      - FrontendWebDescribeNetworkInterfacesCustomResourcePolicyA46CF57B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/DescribeNetworkInterfaces/Resource/Default
  FrontendWebDescribeNetworkInterfacesCustomResourcePolicyA46CF57B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ec2:DescribeNetworkInterfaces
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: FrontendWebDescribeNetworkInterfacesCustomResourcePolicyA46CF57B
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/DescribeNetworkInterfaces/CustomResourcePolicy/Resource
  FrontendWebprivateALBTargetGroup4134355C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 443
      Protocol: HTTPS
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      Targets:
        - Id:
            Fn::GetAtt:
              - FrontendWebDescribeNetworkInterfaces0E22F40C
              - NetworkInterfaces.0.PrivateIpAddress
        - Id:
            Fn::GetAtt:
              - FrontendWebDescribeNetworkInterfaces0E22F40C
              - NetworkInterfaces.1.PrivateIpAddress
      VpcId:
        Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpc8378EB38272D6E3A
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/privateALBTargetGroup/Resource
  FrontendWebPrivateALB453264B5:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      SecurityGroups:
        - Fn::GetAtt:
            - FrontendWebPrivateALBSecurityGroup00AA6AD6
            - GroupId
        - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputFnGetAttsharedSecurityGroupB712E57BGroupId39546593
      Subnets:
        - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940
        - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3
      Type: application
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/PrivateALB/Resource
  FrontendWebPrivateALBSecurityGroup00AA6AD6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB PrivateGenerativeAiSampleAppStackFrontendWebPrivateALB1EE2509A
      SecurityGroupEgress:
        - CidrIp: 255.255.255.255/32
          Description: Disallow all traffic
          FromPort: 252
          IpProtocol: icmp
          ToPort: 86
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpc8378EB38272D6E3A
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/PrivateALB/SecurityGroup/Resource
  FrontendWebPrivateALBALBHTTPSListenerF271C113:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:622690489359:certificate/c4555489-ca4e-43bd-b49f-aa38c1aa4aa8
      DefaultActions:
        - TargetGroupArn:
            Ref: FrontendWebprivateALBTargetGroup4134355C
          Type: forward
      LoadBalancerArn:
        Ref: FrontendWebPrivateALB453264B5
      Port: 443
      Protocol: HTTPS
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/PrivateALB/ALBHTTPSListener/Resource
  FrontendWebHostedZone0C9BE735:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: s3genu.wugo.work.
      VPCs:
        - VPCId:
            Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefVpc8378EB38272D6E3A
          VPCRegion:
            Ref: AWS::Region
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/HostedZone/Resource
  FrontendWebAliasRecord774E5CF0:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName:
          Fn::Join:
            - ""
            - - dualstack.
              - Fn::GetAtt:
                  - FrontendWebPrivateALB453264B5
                  - DNSName
        HostedZoneId:
          Fn::GetAtt:
            - FrontendWebPrivateALB453264B5
            - CanonicalHostedZoneID
      HostedZoneId:
        Ref: FrontendWebHostedZone0C9BE735
      Name: private-genai-sample.s3genu.wugo.work.
      Type: A
    DependsOn:
      - FrontendWebAliasRecordDeleteExistingRecordSetCustomResource94542F59
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/AliasRecord/Resource
  FrontendWebAliasRecordDeleteExistingRecordSetCustomResource94542F59:
    Type: Custom::DeleteExistingRecordSet
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E
          - Arn
      HostedZoneId:
        Ref: FrontendWebHostedZone0C9BE735
      RecordName: private-genai-sample.s3genu.wugo.work.
      RecordType: A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/AliasRecord/DeleteExistingRecordSetCustomResource/Default
  FrontendWebStaticAssetsBucketFE5283E2:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:850b42ef
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/StaticAssetsBucket/Resource
  FrontendWebStaticAssetsBucketPolicyFA95E327:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendWebStaticAssetsBucketFE5283E2
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - FrontendWebStaticAssetsBucketFE5283E2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendWebStaticAssetsBucketFE5283E2
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendWebStaticAssetsBucketFE5283E2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendWebStaticAssetsBucketFE5283E2
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/StaticAssetsBucket/Policy/Resource
  FrontendWebStaticAssetsBucketAutoDeleteObjectsCustomResource9FBBB297:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendWebStaticAssetsBucketFE5283E2
    DependsOn:
      - FrontendWebStaticAssetsBucketPolicyFA95E327
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/StaticAssetsBucket/AutoDeleteObjectsCustomResource/Default
  FrontendWebassetsapi304D297D:
    Type: AWS::ApiGateway::RestApi
    Properties:
      BinaryMediaTypes:
        - "*/*"
      Description: Serves assets from the s3 bucket.
      EndpointConfiguration:
        Types:
          - PRIVATE
        VpcEndpointIds:
          - Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefprivateApiVpcEndpointA7E96476BAFB95BF
      MinimumCompressionSize: 0
      Name: PrivateGenerativeAISampleAssetsProvider
      Policy:
        Statement:
          - Action: execute-api:Invoke
            Condition:
              StringNotEquals:
                aws:SourceVpce:
                  Fn::ImportValue: PrivateGenerativeAiSampleVpcStack:ExportsOutputRefprivateApiVpcEndpointA7E96476BAFB95BF
            Effect: Deny
            Principal:
              AWS: "*"
            Resource: execute-api:/*
          - Action: execute-api:Invoke
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: execute-api:/*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/Resource
  FrontendWebassetsapiDeployment6F1060EB62ee94e18ac4ca131b9b7f01cec4023f:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Serves assets from the s3 bucket.
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
    DependsOn:
      - FrontendWebassetsapiproxyGET4DD46A36
      - FrontendWebassetsapiproxy08A4ADE3
      - FrontendWebassetsapiGETC4D5E5E5
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/Deployment/Resource
  FrontendWebassetsapiDeploymentStageprod3054B9A4:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: FrontendWebassetsapiDeployment6F1060EB62ee94e18ac4ca131b9b7f01cec4023f
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
      StageName: prod
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/DeploymentStage.prod/Resource
  FrontendWebassetsapiproxy08A4ADE3:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - FrontendWebassetsapi304D297D
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/Default/{proxy+}/Resource
  FrontendWebassetsapiproxyGET4DD46A36:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Credentials:
          Fn::GetAtt:
            - FrontendWebapigateways3assumetoleA4FB747C
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
            StatusCode: "200"
        RequestParameters:
          integration.request.path.proxy: method.request.path.proxy
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :s3:path/
              - Ref: FrontendWebStaticAssetsBucketFE5283E2
              - /{proxy}
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
      RequestParameters:
        method.request.path.proxy: true
      ResourceId:
        Ref: FrontendWebassetsapiproxy08A4ADE3
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/Default/{proxy+}/GET/Resource
  FrontendWebassetsapiGETC4D5E5E5:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Credentials:
          Fn::GetAtt:
            - FrontendWebapigateways3assumetoleA4FB747C
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
            StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :s3:path/
              - Ref: FrontendWebStaticAssetsBucketFE5283E2
              - /index.html
      MethodResponses:
        - ResponseParameters:
            method.response.header.Content-Type: true
          StatusCode: "200"
      RequestParameters:
        method.request.path.proxy: true
      ResourceId:
        Fn::GetAtt:
          - FrontendWebassetsapi304D297D
          - RootResourceId
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/assets-api/Default/GET/Resource
  FrontendWebapigateways3assumetoleA4FB747C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      RoleName: API-Gateway-S3-Integration-Role
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/api-gateway-s3-assume-tole/Resource
  FrontendWebapigateways3assumetoleDefaultPolicy8A1BF2EE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:Get
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FrontendWebStaticAssetsBucketFE5283E2
                - Arn
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendWebStaticAssetsBucketFE5283E2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendWebStaticAssetsBucketFE5283E2
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: FrontendWebapigateways3assumetoleDefaultPolicy8A1BF2EE
      Roles:
        - Ref: FrontendWebapigateways3assumetoleA4FB747C
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/api-gateway-s3-assume-tole/DefaultPolicy/Resource
  FrontendWebCustomDomain9425F890:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: private-genai-sample.s3genu.wugo.work
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: arn:aws:acm:us-east-1:622690489359:certificate/c4555489-ca4e-43bd-b49f-aa38c1aa4aa8
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/CustomDomain/Resource
  FrontendWebCustomDomainMapPrivateGenerativeAiSampleAppStackFrontendWebassetsapiAE3689358F8F18AD:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName:
        Ref: FrontendWebCustomDomain9425F890
      RestApiId:
        Ref: FrontendWebassetsapi304D297D
      Stage:
        Ref: FrontendWebassetsapiDeploymentStageprod3054B9A4
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/CustomDomain/Map:--=>PrivateGenerativeAiSampleAppStackFrontendWebassetsapiAE368935/Resource
  FrontendWebdeployreactAppAwsCliLayer3CB445F5:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/deployreactApp/AwsCliLayer/Resource
      aws:asset:path: asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  FrontendWebdeployreactAppCustomResource57FEBA78:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - 4649d4804877edd529d4799b1a0b0a3291c4257c3abbcee9388ec6c5b5934ffe.zip
        - 9c8ccb707c8fd8a0762f58d62c3fc0af517ec86195387b68887c2c003325fb5d.zip
      SourceMarkers:
        - <<marker:0xbaba:0>>:
            Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          <<marker:0xbaba:1>>:
            Ref: AWS::Region
          <<marker:0xbaba:2>>:
            Ref: AWS::URLSuffix
          <<marker:0xbaba:3>>:
            Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
        - {}
      DestinationBucketName:
        Ref: FrontendWebStaticAssetsBucketFE5283E2
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/FrontendWeb/deployreactApp/CustomResource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Runtime:
        Fn::FindInMap:
          - LatestNodeRuntimeMap
          - Ref: AWS::Region
          - value
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: route53:GetChange
                Resource: "*"
              - Effect: Allow
                Action: route53:ListResourceRecordSets
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :route53:::hostedzone/
                      - Ref: FrontendWebHostedZone0C9BE735
              - Effect: Allow
                Action: route53:ChangeResourceRecordSets
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :route53:::hostedzone/
                      - Ref: FrontendWebHostedZone0C9BE735
                Condition:
                  ForAllValues:StringEquals:
                    route53:ChangeResourceRecordSetsRecordTypes:
                      - A
                    route53:ChangeResourceRecordSetsActions:
                      - DELETE
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::DeleteExistingRecordSetCustomResourceProvider/Role
  CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 086a81292ce3af39cedac8c4ca507c9d8f8894dd105906b6d5685b01f88f6547.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08
          - Arn
      Runtime:
        Fn::FindInMap:
          - LatestNodeRuntimeMap
          - Ref: AWS::Region
          - value
    DependsOn:
      - CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler
      aws:asset:path: asset.086a81292ce3af39cedac8c4ca507c9d8f8894dd105906b6d5685b01f88f6547
      aws:asset:property: Code
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime:
        Fn::FindInMap:
          - LatestNodeRuntimeMap
          - Ref: AWS::Region
          - value
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: FrontendWebStaticAssetsBucketFE5283E2
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6
      aws:asset:property: Code
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendWebStaticAssetsBucketFE5283E2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendWebStaticAssetsBucketFE5283E2
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: FrontendWebdeployreactAppAwsCliLayer3CB445F5
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.9
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11TTY/aMBD9LXs3bqFatVdgte1ht0WAeugFDfaUncWxI9sBpVH+e8c2kLCX+L35smfmZSanjzP5+QHOYaL0cWJoL7tNBHUUbNp1UNMBIp6hld0aQ5zXJJZ/7RU+YW1cW6GNyTpiXOKAyVYAx7vGK1xAQPGK8c3p5Lygq/dSueCtO6KdNxzg6R/65BuxJ1cB2Z9Q5aQRSzesIL69Ql2TPSTvB1MvDFR7DbJj3wp9RSGQs+K5sSomwOYb3nCCwejs2PsCLfrf6FNaLwgqno0z5fnpXDlDqk20oF6ELzzKEDAGOU+H0LdRyUWjjhiH2aVo2RVrnleBuZOCyjHcMua90K2Fymne4xb25VUZ9AINhEjKONB7MGAVN3eayW5e15wKqb0t+APG7941dUkc6CjqhSsscoWymDs+jqMQ0V5iLpifofjODarGU2xvV90ZesHfiI88iJWnEyvwh+N0/cfZ3NCIzdeonNdFOwltMPZ9or+aWDdxUFeefNJj0oVqQnTVzl+cvJdzWGbboMYPdCTOoqCdSULY8Y+iDOUChrI2sravAryrsvLuRBp9XixHLZ3VFLOOrNMo38On0/SbnH6V04f3QDTxjY1UoVyX8z+nZjgYsAMAAA==
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
  AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Role
  AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
          - Arn
      Runtime:
        Fn::FindInMap:
          - LatestNodeRuntimeMap
          - Ref: AWS::Region
          - value
    DependsOn:
      - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler
      aws:asset:path: asset.70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24
      aws:asset:property: Code
  CdkJsonStringify1:
    Type: Custom::AWSCDKCfnJsonStringify
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::GetAtt:
          - privateApiVpcEndpointA7E96476
          - NetworkInterfaceIds
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PrivateGenerativeAiSampleAppStack/CdkJsonStringify1/Default
Outputs:
  BackEndApiPrivateGenerativeAISampleBackendApiEndpoint49567B41:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: BackEndApiPrivateGenerativeAISampleBackendApiB86C5562
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: BackEndApiPrivateGenerativeAISampleBackendApiDeploymentStageprod60EB3BA2
          - /
  BackEndApiAuthUserTableName02D46D1E:
    Description: The name of the user table
    Value:
      Ref: BackEndApiAuthUserTableC1A829E0
    Export:
      Name: UserTableName
  FrontendWebassetsapiEndpoint0FEBB9BE:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: FrontendWebassetsapi304D297D
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: FrontendWebassetsapiDeploymentStageprod3054B9A4
          - /
Mappings:
  LatestNodeRuntimeMap:
    af-south-1:
      value: nodejs20.x
    ap-east-1:
      value: nodejs20.x
    ap-northeast-1:
      value: nodejs20.x
    ap-northeast-2:
      value: nodejs20.x
    ap-northeast-3:
      value: nodejs20.x
    ap-south-1:
      value: nodejs20.x
    ap-south-2:
      value: nodejs20.x
    ap-southeast-1:
      value: nodejs20.x
    ap-southeast-2:
      value: nodejs20.x
    ap-southeast-3:
      value: nodejs20.x
    ap-southeast-4:
      value: nodejs20.x
    ap-southeast-5:
      value: nodejs20.x
    ap-southeast-7:
      value: nodejs20.x
    ca-central-1:
      value: nodejs20.x
    ca-west-1:
      value: nodejs20.x
    cn-north-1:
      value: nodejs18.x
    cn-northwest-1:
      value: nodejs18.x
    eu-central-1:
      value: nodejs20.x
    eu-central-2:
      value: nodejs20.x
    eu-north-1:
      value: nodejs20.x
    eu-south-1:
      value: nodejs20.x
    eu-south-2:
      value: nodejs20.x
    eu-west-1:
      value: nodejs20.x
    eu-west-2:
      value: nodejs20.x
    eu-west-3:
      value: nodejs20.x
    il-central-1:
      value: nodejs20.x
    me-central-1:
      value: nodejs20.x
    me-south-1:
      value: nodejs20.x
    mx-central-1:
      value: nodejs20.x
    sa-east-1:
      value: nodejs20.x
    us-east-1:
      value: nodejs20.x
    us-east-2:
      value: nodejs20.x
    us-west-1:
      value: nodejs20.x
    us-west-2:
      value: nodejs20.x
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

